{"mappings":"AAoBA,SAASA,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,QAAO,CAACC,EAASC,KAC1B,MAAMC,EAAgBC,KAAKC,SAAW,GAGtCC,YAAW,KACLH,EACFF,EAAQ,C,SAACH,E,MAAUC,IAGnBG,EAAO,QAAQ,GAEhBH,EAAM,G,CAvBGQ,SAASC,cAAc,SAE/BC,iBAAiB,UAAWC,IAClC,MACEC,UAAUZ,MAAEA,EAAKa,KAAEA,EAAIC,OAAEA,IACvBH,EAAMI,cAEVjB,GAAe,IAoBjBA,EAAc,EAAG,MACdkB,MAAK,EAACjB,SAAEA,EAAQC,MAAEA,MACjBiB,QAAQC,IAAI,uBAAqBnB,QAAiBC,MAAU,IAE7DmB,OAAM,EAACpB,SAAEA,EAAQC,MAAEA,MAClBiB,QAAQC,IAAI,sBAAoBnB,QAAeC,MAAU","sources":["src/js/03-promises.js"],"sourcesContent":["// Напиши скрипт, який на момент сабміту форми викликає функцію createPromise(position, delay)\n// стільки разів, скільки ввели в поле amount. Під час кожного виклику передай їй номер промісу\n// (position), що створюється, і затримку, враховуючи першу затримку (delay), введену користувачем, і крок (step).\n\n// Доповни код функції createPromise таким чином, щоб вона повертала один проміс, який виконується або\n// відхиляється через delay часу. Значенням промісу повинен бути об'єкт, в якому будуть властивості position\n// і delay зі значеннями однойменних параметрів. Використовуй початковий код функції для вибору того, що\n// потрібно зробити з промісом - виконати або відхилити.\n\nconst formRef = document.querySelector('.form');\n\nformRef.addEventListener('submit', (event) => {\n  const {\n    elements: { delay, step, amount }\n  } = event.currentTarget;\n\n  createPromise()\n\n});\n\nfunction createPromise(position, delay) {\n  return new Promis((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    \n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({position, delay});\n      } \n      else {\n        reject(\"error\");\n      }\n    }, delay);\n  });\n}\n\ncreatePromise(2, 1500)\n  .then(({ position, delay }) => {\n    console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n    console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n  });\n"],"names":["$47d4ff9957288465$var$createPromise","position","delay","Promis","resolve","reject","shouldResolve","Math","random","setTimeout","document","querySelector","addEventListener","event","elements","step","amount","currentTarget","then","console","log","catch"],"version":3,"file":"03-promises.fafddfb6.js.map"}